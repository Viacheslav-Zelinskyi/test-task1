{"version":3,"sources":["App.js","api.js","reportWebVitals.js","index.js"],"names":["App","useState","rows","setRows","useEffect","fetch","then","res","json","result","data","Results","ResultRow","catch","err","console","log","api","rowsArray","map","item","push","style","height","width","className","columns","pageSize","field","headerName","type","sortable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mPAKe,SAASA,IAAO,IAAD,EACLC,mBAAS,IADJ,mBACtBC,EADsB,KAChBC,EADgB,KAE7BC,qBAAU,kBCLI,SAAaD,GAC3BE,MAHc,uDAIZC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACNN,EAAQM,EAAOC,KAAKC,QAAQC,cAE5BC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MDDbG,CAAId,KAAU,IAE9B,IAAMe,EAAY,GAGlB,OAFAhB,EAAKiB,KAAI,SAACC,GAAD,OAAUF,EAAUG,KAAKD,MAGjC,qBAAKE,MAAO,CAAEC,OAAQ,IAAKC,MAAO,QAAUC,UAAU,MAAtD,SACC,cAAC,IAAD,CAAUvB,KAAMgB,EAAWQ,QAASA,EAASC,SAAU,OAK1D,IAAMD,EAAU,CACf,CAAEE,MAAO,cAAeC,WAAY,eAAgBC,KAAM,SAAUN,MAAO,KAC3E,CAAEI,MAAO,OAAQC,WAAY,YAAaL,MAAO,KACjD,CAAEI,MAAO,OAAQC,WAAY,OAAQC,KAAM,SAAUN,MAAO,KAC5D,CAAEI,MAAO,SAAUC,WAAY,SAAUL,MAAO,IAAKO,UAAU,GAC/D,CAAEH,MAAO,YAAaC,WAAY,WAAYL,MAAO,IAAKO,UAAU,GACpE,CAAEH,MAAO,gBAAiBC,WAAY,iBAAkBL,MAAO,IAAKM,KAAM,UAC1E,CAAEF,MAAO,YAAaC,WAAY,aAAcL,MAAO,KACvD,CAAEI,MAAO,KAAMC,WAAY,KAAML,MAAO,IAAKM,KAAM,WEfrCE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e2f160c1.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport api from './api';\n\nexport default function App() {\n\tconst [rows, setRows] = useState([]);\n\tuseEffect(() => api(setRows), []);\n\n\tconst rowsArray = [];\n\trows.map((item) => rowsArray.push(item));\n\n\treturn (\n\t\t<div style={{ height: 660, width: '100%' }} className=\"App\">\n\t\t\t<DataGrid rows={rowsArray} columns={columns} pageSize={10} />\n\t\t</div>\n\t);\n}\n\nconst columns = [\n\t{ field: 'ResultOrder', headerName: 'Result Order', type: 'number', width: 150 },\n\t{ field: 'Name', headerName: 'Full Name', width: 200 },\n\t{ field: 'Rank', headerName: 'Rank', type: 'number', width: 130 },\n\t{ field: 'Result', headerName: 'Result', width: 130, sortable: false },\n\t{ field: 'Shootings', headerName: 'Shooting', width: 130, sortable: false },\n\t{ field: 'ShootingTotal', headerName: 'Shooting Total', width: 130, type: 'number' },\n\t{ field: 'TotalTime', headerName: 'Total Time', width: 130 },\n\t{ field: 'WC', headerName: 'WC', width: 130, type: 'number' },\n];\n","const apiUrl = 'https://api.jsonbin.io/b/605b54a0266e9a21b1aa1017/1';\n\nexport default function api(setRows) {\n\tfetch(apiUrl)\n\t\t.then((res) => res.json())\n\t\t.then((result) => {\n\t\t\tsetRows(result.data.Results.ResultRow);\n\t\t})\n\t\t.catch((err) => console.log(err));\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}